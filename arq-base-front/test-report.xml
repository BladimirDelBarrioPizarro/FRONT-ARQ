<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/communications-module/__test__/extract-paths.test.ts">
    <testCase name="function: extractPaths Obtiene el objeto parseado correctamente" duration="8"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/i18n-module/__test__/get-mostly-appropiate-default-lang-code.test.ts">
    <testCase name="get-mostly-appropiate-default-lang-code parametro userlang a null, devuelve lang por defecto" duration="5"/>
    <testCase name="get-mostly-appropiate-default-lang-code parametro userlang disponible en objeto, devuelve userLang" duration="1"/>
    <testCase name="get-mostly-appropiate-default-lang-code parametro userlang no existe en objeto, devuelve idioma por defecto" duration="1"/>
    <testCase name="get-mostly-appropiate-default-lang-code parametro userlang solo idioma (aa), devuelve aa-AA correspondiente" duration="1"/>
    <testCase name="get-mostly-appropiate-default-lang-code parametro userlang idioma y cultura (aa-AA), devuelve aa-AA correspondiente" duration="0"/>
    <testCase name="get-mostly-appropiate-default-lang-code parametro userlang idioma y cultura (aa-AA) pero en el objeto no existe la cultura pero si el idioma, devuelve idioma correspondiente" duration="1"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/traceabilty-module/__test__/create-log-method.test.ts">
    <testCase name="create-log-method Log no tiene prioridad suficiente, se ignora" duration="8"/>
    <testCase name="create-log-method Log se debe enviar inmediatamente" duration="1"/>
    <testCase name="create-log-method Log se trata al exceder la capacidad maxima" duration="1"/>
    <testCase name="create-log-method Log NO se trata al NO exceder la capacidad maxima" duration="1"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/i18n-react/__test__/i18next-config.test.ts">
    <testCase name="i18next-config function: i18nextConfig Devuelve instancia de i18n inicializada" duration="10"/>
    <testCase name="i18next-config function: i18nextChangeLanguage Devuelve instancia de i18n inicializada" duration="5"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/traceabilty-module/__test__/log-interval.test.ts">
    <testCase name="log-interval Llama a setTimeout" duration="9"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/configuration-module/__test__/config.test.ts">
    <testCase name="Configuration-module function: getRemoteConfig function: getRemoteConfig" duration="5"/>
    <testCase name="Configuration-module function: getConfigByTime function: getConfigByTime and cancelGetConfigByTime" duration="2"/>
    <testCase name="Configuration-module function: getConfig Obtiene null si no encuentra la clave" duration="1"/>
    <testCase name="Configuration-module function: getConfig Obtiene toda la configuración si no se proporciona clave" duration="1"/>
    <testCase name="Configuration-module function: getConfig Obtiene la configuración de la clave indicada" duration="2"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/traceabilty-module/__test__/logger.test.ts">
    <testCase name="module: logger Devuelve tantas funciones como el parametro levels por defecto" duration="6"/>
    <testCase name="module: logger Devuelve tantas funciones como el parametro levels informado" duration="10"/>
    <testCase name="module: logger Levels array vacío" duration="5"/>
    <testCase name="module: logger levelsPriority objeto vacío" duration="2"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/i18n-module/__test__/store-plugin-localstorage.test.ts">
    <testCase name="store-plugin-localstorage function: put se proporciona id y valor, se obtiene valor" duration="2"/>
    <testCase name="store-plugin-localstorage function: put se proporciona id y valor, se comprueba que se encuentra en el localStorage" duration="1"/>
    <testCase name="store-plugin-localstorage function: get dado un id obtiene el valor del localStorage" duration="0"/>
    <testCase name="store-plugin-localstorage function: configure dado un id devuelve las functiones get y put" duration="1"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/traceabilty-module/__test__/check-priority-factory.test.ts">
    <testCase name="check-priority-factory Nivel mas bajo" duration="3"/>
    <testCase name="check-priority-factory Nivel intermedio" duration="5"/>
    <testCase name="check-priority-factory Nivel alto" duration="2"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/communications-module/__test__/utils.test.ts">
    <testCase name="utils function: normalizePath Elimina &quot;/&quot; del path" duration="1"/>
    <testCase name="utils function: normalizePath Deja el path igual al no tener &quot;/&quot;" duration="1"/>
    <testCase name="utils function: composeUrl Compone la url correctamente" duration="1"/>
    <testCase name="utils function: composeUrl Compone la url correctamente sin basepath" duration="1"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/i18n-module/__test__/get-browser-language.test.ts">
    <testCase name="get-browser-language Obtiene el idioma de usuario" duration="2"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/traceabilty-module/__test__/default-log-handler.test.ts">
    <testCase name="default-log-handler method: defaultLogHandler" duration="2"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/i18n-module/__test__/inner-store.test.ts">
    <testCase name="inner-store function: put se proporciona clave y valor y devuelve valor" duration="9"/>
    <testCase name="inner-store function: get añade una clave y la obtiene correctamente" duration="1"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/mediator/__test__/get-environment.test.ts">
    <testCase name="get-environment method: getEnvironment process.env.ENV no informado, devuelve DEV" duration="2"/>
    <testCase name="get-environment method: getEnvironment process.env.ENV informado, devuelve PRO" duration="1"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/traceabilty-module/__test__/log-store.test.ts">
    <testCase name="log-store Inserta logs, los obtiene y borra el store" duration="3"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/traceabilty-module/__test__/default-log-decorator.test.ts">
    <testCase name="default-log-decorator method: defaultLogDecorator" duration="2"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/i18n-module/__test__/change-language.test.ts">
    <testCase name="change-language parametro newLangCode a null, devuelve false" duration="3"/>
    <testCase name="change-language parametro newLangCode a es-ES, devuelve la traducción" duration="2"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/i18n-module/__test__/init.test.ts">
    <testCase name="init obtiene langCode por defecto y traduccion" duration="7"/>
    <testCase name="init obtiene langCode del store y traduccion" duration="2"/>
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/communications-module/__test__/extract-verbs.test.ts">
  </file>
  <file path="/home/atmira/src/CESCE_v3/arquitectura/arq-base-front/src/communications-module/__test__/init.test.ts">
  </file>
</testExecutions>